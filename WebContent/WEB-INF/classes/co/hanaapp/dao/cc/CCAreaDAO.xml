<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- TABLE NAME : TB_CC_AREA_BAS : 지역, TB_CC_USEAREA_LST: 지사별 사용지역 -->
<mapper namespace="co.hanaapp.dao.cc.CCAreaDAO">

 <!-- 
 
 	주의) null 값이 있는 항목은 무조건 nvl(항목, ' ') 처리 해야한다.
 	mybatis 3 버젼부터 null 이면 result의 map에 해당 항목 자체가 없으므로 반드시 nvl 처리 해야함!@@@@@
 	
 	공백은 heweb에서 공백만 있을경우 "" 처리 함
 
  -->
 


   <!-- 지역정보 조회 -->
    <select id="selectAreaLst" parameterType="map" resultType ="map">
        SELECT /* 지역정보 목록 */
               'N' AS FLAG,
               ROWIDTOCHAR(ROWID) AS ROW_ID,
               '0' AS CHK,
               #{OPERATOR, jdbcType=VARCHAR} AS OPERATOR,
               nvl(AREA_CD,' ') AREA_CD, 
               nvl(AREA_NM,' ') AREA_NM, 
               nvl(ADDR_NM,' ') ADDR_NM, 
               decode(USE_YN,'Y',1,0) USE_YN
          FROM TB_CC_AREA_BAS
         WHERE AREA_NM LIKE '%' || #{AREA_NM, jdbcType=VARCHAR} || '%'
         ORDER BY AREA_CD

    </select>

 
 	<!-- 지역정보 추가/수정 -->
     <insert   id="saveAreaLst" parameterType="map" >

        begin
            UPDATE TB_CC_AREA_BAS
               SET AREA_CD = #{AREA_CD, jdbcType=VARCHAR} , 
                   AREA_NM = #{AREA_NM, jdbcType=VARCHAR} , 
                   ADDR_NM = #{ADDR_NM, jdbcType=VARCHAR} , 
                   USE_YN = DECODE(#{USE_YN, jdbcType=VARCHAR},'1','Y','N') , 
                   EDT_USR = #{OPERATOR, jdbcType=VARCHAR} , 
                   EDT_DT = SYSDATE 
            where rowid = chartorowid(#{ROW_ID, jdbcType=VARCHAR});      


               if sql%rowcount=0 then
                INSERT INTO TB_CC_AREA_BAS
                        (
                         AREA_CD , 
                         AREA_NM , 
                         ADDR_NM , 
                         USE_YN , 
                         CRT_USR , 
                         CRT_DT , 
                         EDT_USR , 
                         EDT_DT )
                 VALUES (
                         #{AREA_CD, jdbcType=VARCHAR} , 
                         #{AREA_NM, jdbcType=VARCHAR} , 
                         #{ADDR_NM, jdbcType=VARCHAR} , 
                         DECODE(#{USE_YN, jdbcType=VARCHAR},'1','Y','N') , 
                         #{OPERATOR, jdbcType=VARCHAR} , 
                         SYSDATE , 
                         #{OPERATOR, jdbcType=VARCHAR} , 
                         SYSDATE );
                  end if;

            exception
                when others then
                    raise_application_error(-20501,'TB_CC_AREA_BAS save error : ' ||SQLERRM);
            end;
        
    </insert>
 
	<!-- 지역정보 삭제 -->
    <delete   id="deleteAreaLst" parameterType="map" >
       	DELETE FROM TB_CC_AREA_BAS
		 WHERE ROWID = chartorowid(#{ROW_ID, jdbcType=VARCHAR})    
    </delete>
 
 

   <!-- 미사용 지역정보 조회 -->
    <select id="selectNonUseAreaLst" parameterType="map" resultType ="map">
        SELECT /* 미사용 지역정보 목록 */
               'N' AS FLAG,
               ROWIDTOCHAR(ROWID) AS ROW_ID,
               '0' AS CHK,
               #{OPERATOR, jdbcType=VARCHAR} AS OPERATOR,
               nvl(AREA_CD,' ') AREA_CD, 
               nvl(AREA_NM,' ') AREA_NM, 
               nvl(ADDR_NM,' ') ADDR_NM
          FROM TB_CC_AREA_BAS
         WHERE AREA_CD NOT IN (SELECT AREA_CD 
                                 FROM TB_CC_USEAREA_LST
                                WHERE COM_ID =  #{S_COM_ID, jdbcType=VARCHAR}
                                  AND BRCH_ID = #{S_BRCH_ID, jdbcType=VARCHAR}
                               )
               AND USE_YN = 'Y'
         ORDER BY AREA_CD
         

    </select>
 
   <!-- 사용 지역정보 조회 -->
    <select id="selectUseAreaLst" parameterType="map" resultType ="map">
        SELECT /* 사용 지역정보 목록 */
               'N' AS FLAG,
               ROWIDTOCHAR(B.ROWID) AS ROW_ID,
               '0' AS CHK,
               #{OPERATOR, jdbcType=VARCHAR} AS OPERATOR,
               nvl(B.COM_ID,' ') COM_ID, 
               nvl(B.BRCH_ID,' ') BRCH_ID, 
               nvl(A.AREA_CD,' ') AREA_CD, 
               nvl(A.AREA_NM,' ') AREA_NM, 
               nvl(A.ADDR_NM,' ') ADDR_NM,
               NVL(B.SORT_NO,'-99999') AS SORT_NO
          FROM TB_CC_AREA_BAS A, TB_CC_USEAREA_LST B
         WHERE A.AREA_CD = B.AREA_CD
           AND B.COM_ID = #{S_COM_ID, jdbcType=VARCHAR}
           AND B.BRCH_ID = #{S_BRCH_ID, jdbcType=VARCHAR}
         ORDER BY B.SORT_NO, A.AREA_CD

    </select>
 

 	<!-- 사용지역정보 추가/수정/삭제 -->
     <insert   id="saveUseAreaLst" parameterType="map" >
           BEGIN
                IF #{FLAG, jdbcType=VARCHAR} = 'D' THEN
                   DELETE FROM TB_CC_USEAREA_LST
                    WHERE ROWID = chartorowid(#{ROW_ID, jdbcType=VARCHAR}) ;              
               ELSE
					UPDATE TB_CC_USEAREA_LST
					   SET COM_ID = #{COM_ID, jdbcType=VARCHAR} , 
					       BRCH_ID = #{BRCH_ID, jdbcType=VARCHAR} , 
					       AREA_CD = #{AREA_CD, jdbcType=VARCHAR} , 
					       SORT_NO = #{SORT_NO, jdbcType=VARCHAR} , 
					       EDT_USR = #{OPERATOR, jdbcType=VARCHAR} , 
					       EDT_DT = SYSDATE 
                    WHERE ROWID = chartorowid(#{ROW_ID, jdbcType=VARCHAR}) ;   
                 
                 IF SQL%ROWCOUNT=0 THEN
					INSERT INTO TB_CC_USEAREA_LST
					        (
					         COM_ID , 
					         BRCH_ID , 
					         AREA_CD , 
					         SORT_NO , 
					         CRT_USR , 
					         CRT_DT , 
					         EDT_USR , 
					         EDT_DT )
					 VALUES (
					         #{COM_ID, jdbcType=VARCHAR} , 
					         #{BRCH_ID, jdbcType=VARCHAR} , 
					         #{AREA_CD, jdbcType=VARCHAR} , 
					         #{SORT_NO, jdbcType=VARCHAR} , 
					         #{OPERATOR, jdbcType=VARCHAR} , 
					         SYSDATE , 
					         #{OPERATOR, jdbcType=VARCHAR} , 
					         SYSDATE );
                    END IF;
                END IF;
            EXCEPTION
                WHEN OTHERS THEN
                    RAISE_APPLICATION_ERROR(-20501,'TB_CC_USEAREA_LST save error : ' ||SQLERRM);
            END;
 
        
    </insert>

</mapper>