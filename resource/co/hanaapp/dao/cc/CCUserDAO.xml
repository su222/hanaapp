<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- TABLE NAME : TB_CC_USER_LST : 사용자 -->
<mapper namespace="co.hanaapp.dao.cc.CCUserDAO">

 <!-- 
 
 	주의) null 값이 있는 항목은 무조건 nvl(항목, ' ') 처리 해야한다.
 	mybatis 3 버젼부터 null 이면 result의 map에 해당 항목 자체가 없으므로 반드시 nvl 처리 해야함!@@@@@
 	
 	공백은 heweb에서 공백만 있을경우 "" 처리 함
 
  -->
 


   <!-- 사용자 Tree  조회 -->
    <select id="selectUserTree" parameterType="map" resultType ="map">
        SELECT /* 사용자 Tree 목록 */
               'N' AS FLAG,
               '0' AS CHK,
               #{OPERATOR, jdbcType=VARCHAR} AS OPERATOR,
               nvl(A.BRCH_ID,' ') BRCH_ID, 
               nvl(A.USR_ID,'-99999') USR_ID, 
               nvl(A.USR_NM,' ') USR_NM,
               nvl(FC_CC_GET_CODENAME('CC03',A.USR_GBN),' ') USR_GBN,
               nvl(FC_CC_GET_CODENAME('CC08',A.PMS_GBN),' ') PMS_GBN                      
          FROM TB_CC_USER_LST A
         WHERE A.BRCH_ID =  #{S_BRCH_ID, jdbcType=VARCHAR}
           AND (A.USR_ID LIKE  #{S_USR_NM, jdbcType=VARCHAR} || '%' 
                OR A.USR_NM LIKE '%' || #{S_USR_NM, jdbcType=VARCHAR} || '%'                          
           )
           AND (nvl(A.TEL_NO, ' ') LIKE '%' || #{S_TEL_NO, jdbcType=VARCHAR} || '%' OR nvl(A.HP_NO, ' ') LIKE '%' || #{S_TEL_NO, jdbcType=VARCHAR} || '%')
           AND nvl(A.USR_GBN, ' ') LIKE '%' || #{S_USR_GBN, jdbcType=VARCHAR} || '%'
         ORDER BY nvl(A.USR_ID,'-99999')
         

    </select>



   <!-- 사용자 기본정보  조회 -->
    <select id="selectUserInfo" parameterType="map" resultType ="map">
        SELECT /* 사용자 기본정보 */
                'N' AS FLAG,
                ROWIDTOCHAR(A.ROWID) AS ROW_ID,
                '0' AS CHK,
                #{OPERATOR, jdbcType=VARCHAR} AS OPERATOR,
				NVL(A.BRCH_ID,' ') AS BRCH_ID,
				NVL(A.USR_ID,' ') AS USR_ID,
				NVL(A.DEPT_CD,' ') AS DEPT_CD,
				NVL(FC_CC_GET_DEPTNAME(A.BRCH_ID, A.DEPT_CD),' ') AS DEPT_NM,
				NVL(A.USR_NM,' ') AS USR_NM,
				NVL(A.USR_GBN,' ') AS USR_GBN,
				NVL(A.TEL_NO,' ') AS TEL_NO,
				NVL(A.HP_NO,' ') AS HP_NO,
				NVL(A.FAX_NO,' ') AS FAX_NO,
				NVL(A.EMAIL,' ') AS EMAIL,
				NVL(TO_CHAR(A.ST_DT,'YYYYMMDD'),' ') AS ST_DT,
				NVL(TO_CHAR(A.ED_DT,'YYYYMMDD'),' ') AS ED_DT,
				NVL(A.ADDR,' ') AS ADDR,
				NVL(A.USE_YN,' ') AS USE_YN,
				NVL(B.USR_IP,' ') AS USR_IP,
				NVL(B.USR_PWD,' ') AS USR_PWD,
				NVL(A.USR_JMN,' ') AS USR_JMN,
				NVL(A.STP_FILE,' ') AS STP_FILE,
				NVL(A.STP_SAVE_FILE,' ') AS STP_SAVE_FILE,
				NVL(A.PMS_GBN,' ') AS PMS_GBN,
				NVL(A.OUT_NOTE,' ') AS OUT_NOTE                									         
          FROM TB_CC_USER_LST A, TB_CC_LOGIN_LST B
         WHERE A.BRCH_ID = B.BRCH_ID
           AND A.USR_ID = B.USR_ID
           AND A.BRCH_ID =  #{BRCH_ID, jdbcType=VARCHAR}
           AND A.USR_ID = #{USR_ID, jdbcType=VARCHAR}

    </select>




   	<!-- 사용자정보 추가/수정 -->
     <insert   id="saveUserLst" parameterType="map" >

        DECLARE
            V_USR_ID VARCHAR2(15);
        BEGIN
            
            -- 사용자 정보와 로그인 정보 동시 수정
            BEGIN
                SELECT USR_ID
                  INTO V_USR_ID
                  FROM TB_CC_USER_LST
                 WHERE ROWID = CHARTOROWID(#{ROW_ID, JDBCTYPE=VARCHAR});   
            EXCEPTION
                WHEN NO_DATA_FOUND THEN
                     V_USR_ID := NULL;     
                WHEN OTHERS THEN
                     RAISE_APPLICATION_ERROR(-20501,'TB_CC_USER_LST GET USR_ID error : ' ||SQLERRM);
            END;
            
            IF V_USR_ID IS NOT NULL THEN
            
                BEGIN


				UPDATE TB_CC_USER_LST
				   SET DEPT_CD = #{DEPT_CD, jdbcType=VARCHAR} , 
				       USR_NM = #{USR_NM, jdbcType=VARCHAR} , 
				       USR_GBN = #{USR_GBN, jdbcType=VARCHAR} , 
				       TEL_NO = #{TEL_NO, jdbcType=VARCHAR} , 
				       HP_NO = #{HP_NO, jdbcType=VARCHAR} , 
				       FAX_NO = #{FAX_NO, jdbcType=VARCHAR} , 
				       EMAIL = #{EMAIL, jdbcType=VARCHAR} , 
				       ST_DT = #{ST_DT, jdbcType=VARCHAR} , 
				       ED_DT = #{ED_DT, jdbcType=VARCHAR} , 
				       ADDR = #{ADDR, jdbcType=VARCHAR} , 
				       USE_YN = #{USE_YN, jdbcType=VARCHAR} , 
				       EDT_USR = #{OPERATOR, jdbcType=VARCHAR} , 
				       EDT_DT = SYSDATE , 
				       USR_JMN = #{USR_JMN, jdbcType=VARCHAR} , 
				       STP_FILE = #{STP_FILE, jdbcType=VARCHAR} , 
				       STP_SAVE_FILE = #{STP_SAVE_FILE, jdbcType=VARCHAR} ,
				       PMS_GBN = #{PMS_GBN, jdbcType=VARCHAR},
				       OUT_NOTE = #{OUT_NOTE, jdbcType=VARCHAR} 
                     where USR_ID = V_USR_ID
                       and BRCH_ID = #{BRCH_ID, jdbcType=VARCHAR};


                   -- 비밀번호 값이있으면 수정
                   IF #{USR_PWD, jdbcType=VARCHAR} IS NOT NULL THEN
                   
                       UPDATE TB_CC_LOGIN_LST
                          SET USR_PWD = #{USR_PWD, jdbcType=VARCHAR},
                              EDT_USR = #{OPERATOR, jdbcType=VARCHAR} , 
                              EDT_DT = SYSDATE
                        where USR_ID = V_USR_ID
                          and BRCH_ID = #{BRCH_ID, jdbcType=VARCHAR};
                   END IF;                               
                             
                        
              END;
           ELSE  
              BEGIN    


					INSERT INTO TB_CC_USER_LST
					        (
					         BRCH_ID , 
					         USR_ID , 
					         DEPT_CD , 
					         USR_NM , 
					         USR_GBN , 
					         TEL_NO , 
					         HP_NO , 
					         FAX_NO,
					         EMAIL , 
					         ST_DT , 
					         ED_DT , 
					         ADDR , 
					         USE_YN , 
					         CRT_USR , 
					         CRT_DT , 
					         EDT_USR , 
					         EDT_DT , 
					         USR_JMN , 
					         STP_FILE , 
					         STP_SAVE_FILE,
					         PMS_GBN,
					         OUT_NOTE )
					 VALUES (
					         #{BRCH_ID, jdbcType=VARCHAR} , 
					         #{USR_ID, jdbcType=VARCHAR} , 
					         #{DEPT_CD, jdbcType=VARCHAR} , 
					         #{USR_NM, jdbcType=VARCHAR} , 
					         #{USR_GBN, jdbcType=VARCHAR} , 
					         #{TEL_NO, jdbcType=VARCHAR} , 
					         #{HP_NO, jdbcType=VARCHAR} , 
					         #{FAX_NO, jdbcType=VARCHAR} , 
					         #{EMAIL, jdbcType=VARCHAR} , 
					         #{ST_DT, jdbcType=VARCHAR} , 
					         #{ED_DT, jdbcType=VARCHAR} , 
					         #{ADDR, jdbcType=VARCHAR} , 
					         'Y' , 
					         #{OPERATOR, jdbcType=VARCHAR} , 
					         SYSDATE , 
					         #{OPERATOR, jdbcType=VARCHAR} , 
					         SYSDATE , 
					         #{USR_JMN, jdbcType=VARCHAR} , 
					         #{STP_FILE, jdbcType=VARCHAR} , 
					         #{STP_SAVE_FILE, jdbcType=VARCHAR},
					         #{PMS_GBN, jdbcType=VARCHAR},
					         #{OUT_NOTE, jdbcType=VARCHAR}
                               );

                             
                    INSERT INTO TB_CC_LOGIN_LST
                            (
                             BRCH_ID , 
                             USR_ID , 
                             USR_IP , 
                             USR_PWD , 
                             BEF_PWD1 , 
                             BEF_PWD2 , 
                             BEF_PWD3 , 
                             FAIL_CNT , 
                             LOCK_YN , 
                             PWD_EDT_DT , 
                             PWD_TP , 
                             LST_LOGIN_DT , 
                             USE_YN , 
                             CRT_USR , 
                             CRT_DT , 
                             EDT_USR , 
                             EDT_DT )
                     VALUES (
                             #{BRCH_ID, jdbcType=VARCHAR} , 
                             #{USR_ID, jdbcType=VARCHAR} , 
                             NULL , 
                             #{USR_PWD, jdbcType=VARCHAR} , 
                             NULL , 
                             NULL , 
                             NULL , 
                             0 , 
                             'N' , 
                             NULL, 
                             'N' , 
                             SYSDATE , 
                             'Y' , 
                             #{OPERATOR, jdbcType=VARCHAR} , 
                             SYSDATE , 
                             #{OPERATOR, jdbcType=VARCHAR} , 
                             SYSDATE );                             
                  
               END;
           END IF;

            EXCEPTION
                WHEN OTHERS THEN
                    RAISE_APPLICATION_ERROR(-20501,'TB_CC_USER_LST save error : ' ||SQLERRM);
            END;
        
    </insert>
 
	<!-- 사용자정보 삭제 -->
    <delete   id="deleteUserLst" parameterType="map" >
       	BEGIN
	       	
		    DELETE FROM TB_CC_USERBOND_LST A
	       	 WHERE (BRCH_ID, USR_ID) IN 
		       	 (SELECT BRCH_ID, USR_ID 
		       	    FROM TB_CC_USER_LST
		       	   WHERE ROWID = chartorowid(#{ROW_ID, jdbcType=VARCHAR})   
		       	 );
		       	 
	       	DELETE FROM TB_CC_LOGIN_LST A
	       	 WHERE (BRCH_ID, USR_ID) IN 
		       	 (SELECT BRCH_ID, USR_ID 
		       	    FROM TB_CC_USER_LST
		       	   WHERE ROWID = chartorowid(#{ROW_ID, jdbcType=VARCHAR})   
		       	 );


	       	DELETE FROM TB_CC_USER_LST
			 WHERE ROWID = chartorowid(#{ROW_ID, jdbcType=VARCHAR});   
        exception
            when others then
                raise_application_error(-20501,'TB_CC_USER_LST save error : ' ||SQLERRM);
        end;  
   
    </delete>
 
 
  <!-- 사용자 채권사  조회 -->
    <select id="selectUserBondInfo" parameterType="map" resultType ="map">
            SELECT /* 사용자 채권사 정보 */
                   'N' AS FLAG,
                   ROWIDTOCHAR(a.ROWID) AS ROW_ID,
                   '0' AS CHK,
                   #{OPERATOR, jdbcType=VARCHAR} AS OPERATOR,
                    NVL(a.BRCH_ID,' ') AS BRCH_ID,
                    NVL(a.USR_ID,' ') AS USR_ID,
                    NVL(a.BND_SEQ,'-99999') AS BND_SEQ,
                    NVL(a.SPT_SEQ,'-99999') AS SPT_SEQ,
                    NVL(b.BND_NM,' ') AS BND_NM,
                    NVL(C.SPT_NM,'-99999') AS SPT_NM,
                    NVL(a.SORT_NO,'-99999') AS SORT_NO,
                    NVL(a.NOTE,' ') AS NOTE
              FROM TB_CC_USERBOND_LST A, TB_CC_BOND_LST B, TB_CC_BONDSPOT_LST C
             WHERE A.BRCH_ID = B.BRCH_ID
               AND A.BRCH_ID = C.BRCH_ID 
               AND A.BND_SEQ = B.BND_SEQ
               AND A.BND_SEQ = C.BND_SEQ
               AND A.SPT_SEQ = C.SPT_SEQ
               AND A.BRCH_ID = #{BRCH_ID, jdbcType=VARCHAR}
               AND A.USR_ID = #{USR_ID, jdbcType=VARCHAR}
             ORDER BY A.SORT_NO

    </select>

  	<!-- 사용자 사건진행정보 추가/수정 -->
     <insert   id="saveUserBondLst" parameterType="map" >

        begin
            IF #{FLAG, jdbcType=VARCHAR} = 'D' THEN
                DELETE FROM TB_CC_USERBOND_LST
                 WHERE ROWID = chartorowid(#{ROW_ID, jdbcType=VARCHAR}) ;              
            ELSE			
			
				UPDATE TB_CC_USERBOND_LST
				   SET USR_ID = #{USR_ID, jdbcType=VARCHAR} , 
					   BND_SEQ = #{BND_SEQ, jdbcType=VARCHAR} , 
					   SPT_SEQ = #{SPT_SEQ, jdbcType=VARCHAR} , 
				       SORT_NO = #{SORT_NO, jdbcType=VARCHAR} , 
				       NOTE = #{NOTE, jdbcType=VARCHAR} , 
				       EDT_USR = #{OPERATOR, jdbcType=VARCHAR} , 
				       EDT_DT = SYSDATE 
				WHERE ROWID = chartorowid(#{ROW_ID, jdbcType=VARCHAR}) ; 
	
	               if sql%rowcount=0 then
					INSERT INTO TB_CC_USERBOND_LST
					        (
					         BRCH_ID , 
					         USR_ID , 
					         BND_SEQ , 
					         SPT_SEQ , 
					         SORT_NO , 
					         NOTE , 
					         CRT_USR , 
					         CRT_DT , 
					         EDT_USR , 
					         EDT_DT )
					 VALUES (
					         #{BRCH_ID, jdbcType=VARCHAR} , 
					         #{USR_ID, jdbcType=VARCHAR} , 
					         #{BND_SEQ, jdbcType=VARCHAR} , 
					         #{SPT_SEQ, jdbcType=VARCHAR} , 
					         #{SORT_NO, jdbcType=VARCHAR} , 
					         #{NOTE, jdbcType=VARCHAR} , 
					         #{OPERATOR, jdbcType=VARCHAR} , 
					         SYSDATE , 
					         #{OPERATOR, jdbcType=VARCHAR} , 
					         SYSDATE );					

	                  end if;
               END IF;
            exception
                when others then
                    raise_application_error(-20501,'TB_CC_USERBOND_LST save error : ' ||SQLERRM);
            end;
        
    </insert>
 
	<!-- 지점정보 삭제 -->
    <delete   id="deleteUserBondLst" parameterType="map" >
       	DELETE FROM TB_CC_BONDSPOT_LST
		 WHERE ROWID = chartorowid(#{ROW_ID, jdbcType=VARCHAR})    
    </delete>
 
 
    <!-- 팀정보  조회 -->
    <select id="selectDeptCode" parameterType="map" resultType ="map">
        SELECT /* 팀정보 */
                NVL(DEPT_CD,' ') AS DEPT_CD,
				NVL(DEPT_NM,' ') AS DEPT_NM         
          FROM TB_CC_DEPT_BAS A
         WHERE A.BRCH_ID =  #{S_BRCH_ID, jdbcType=VARCHAR}
         ORDER BY DEPT_CD

    </select>
 
    <!-- 사용자 팝업  조회 -->
    <select id="selectUsrPopup" parameterType="map" resultType ="map">
        SELECT /* 사용자 팝업 */
                NVL(A.USR_ID,' ') AS USR_ID,
				NVL(A.DEPT_CD,' ') AS DEPT_CD,
				NVL(FC_CC_GET_DEPTNAME(A.BRCH_ID, A.DEPT_CD),' ') AS DEPT_NM,
				NVL(A.USR_NM,' ') AS USR_NM				
          FROM TB_CC_USER_LST A, TB_CC_LOGIN_LST B
         WHERE A.BRCH_ID = B.BRCH_ID
           AND A.USR_ID = B.USR_ID
           AND A.BRCH_ID =  #{S_BRCH_ID, jdbcType=VARCHAR}
           AND A.USR_NM like '%' || #{S_USR_NM, jdbcType=VARCHAR} || '%'
           order by A.usr_id

    </select>

    <!-- 사용자 권한  조회 -->
    <select id="searchUsrPms" parameterType="map" resultType ="map">
        SELECT /* 사용자 권한 */
                NVL(A.BRCH_ID,' ') AS BRCH_ID,
                NVL(A.USR_ID,' ') AS USR_ID,
				NVL(A.PMS_GBN,' ') AS PMS_GBN	
          FROM TB_CC_USER_LST A
         WHERE A.BRCH_ID =  #{S_BRCH_ID, jdbcType=VARCHAR}
           AND A.USR_ID =  #{S_USR_ID, jdbcType=VARCHAR}

    </select>
 
 
</mapper>